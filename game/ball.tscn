[gd_scene load_steps=10 format=2]

[ext_resource path="res://res/ball2.png" type="Texture" id=1]
[ext_resource path="res://res/light.png" type="Texture" id=2]
[ext_resource path="res://res/ball.png" type="Texture" id=3]
[ext_resource path="res://privet.wav" type="AudioStream" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"

export var jump_speed: int = -1500
export var gravity: int = 1000
export var speed:int = 300
var emmiter;
var camera;

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	DB.au = $s_up; 
	#emmiter = get_tree().root.get_node(\"/root/main/\")
	#print('EM: ', emmiter)
#	camera = DB.root.get_node('cube');
	
	pass # Replace with function body.




var velocity = Vector2()

func get_input():
	velocity.x = 0
	var jump = Input.is_action_pressed(\"up\")
	var stop = Input.is_action_just_released(\"up\")
	
	var right = Input.is_action_pressed(\"right\")
	var left = Input.is_action_pressed(\"left\")
	
	if is_on_floor():
		velocity.y = 0
	
	if is_on_floor() and jump:
		velocity.y = jump_speed
		
		#$s_up.pitch_scale(0.5)
		$s_up.play(0.1)
		 
		
	if stop and (velocity.y < 0):
		velocity.y = 0
	if right:
		velocity.x = speed
	if left:
		velocity.x = -speed

func _process(delta):
	#if is_on_floor() and !emmiter.list.empty():
	#	print(emmiter.list[0].global_position.x<position.x)
	get_input()
	velocity.y += gravity * delta * DB.slow;
	#velocity.x *= delta
	move_and_slide(velocity*DB.slow, Vector2(0, -1), true);
	#print(get_slide_collision())
	#move_and_collide(velocity * delta);



# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass
"

[sub_resource type="CircleShape2D" id=2]
radius = 40.0

[sub_resource type="VisualShaderNodeColorConstant" id=3]
output_port_for_preview = 0
constant = Color( 0.734375, 0, 0, 1 )

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;



void vertex() {
// Вывод:0

}

void fragment() {
// Вывод:0

}

void light() {
// Вывод:0

}
"
graph_offset = Vector2( 0, 36 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 380, 140 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 860, 80 )

[sub_resource type="ShaderMaterial" id=5]
render_priority = 1
shader = SubResource( 4 )

[node name="ball" type="KinematicBody2D"]
script = SubResource( 1 )
gravity = 2000

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
position = Vector2( -9.84021, 5.57402 )
scale = Vector2( 1.5819, 1.5819 )
build_mode = 1
polygon = PoolVector2Array( 33.0741, 25.0075, 15.5926, 49.6002, -7.22223, 51.0816, -21.1482, 45.7483, -34.4815, 18.489, -35.0741, 8.41493, -41.2963, -6.6962, -40.1112, -23.8814, -31.8148, -56.1777, -3.66667, -77.8074, 24.7778, -83.7333, 46.1112, -69.8074, 50.2593, -54.1037, 53.2223, -42.5481, 51.1482, -9.36286, 49.3704, 7.82233 )

[node name="ball2" type="Sprite" parent="CollisionPolygon2D"]
position = Vector2( 4.668, -16.8659 )
texture = ExtResource( 1 )

[node name="Light2D" type="Light2D" parent="CollisionPolygon2D"]
position = Vector2( 3.89856, 1.8949 )
scale = Vector2( 2.22869, 1.47094 )
texture = ExtResource( 2 )
color = Color( 0.776471, 0.372549, 0.780392, 0.117647 )
energy = 2.0
shadow_enabled = true
shadow_filter_smooth = 5.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 2 )
disabled = true

[node name="ball" type="Sprite" parent="."]
visible = false
material = SubResource( 5 )
position = Vector2( 0, 0.0202332 )
scale = Vector2( 0.4, 0.400202 )
texture = ExtResource( 3 )

[node name="s_up" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 4 )
bus = "up"
